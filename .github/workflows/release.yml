name: Build and Package Extensions

on: 
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Firefox Extension
        run: |
          mkdir -p ${{ env.FIREFOX_OUTPUT_DIR }}
          cd ${{ env.FIREFOX_EXTENSION_DIR }}
          zip -r ../${{ env.FIREFOX_OUTPUT_DIR }}/firefox_${{ github.event.repository.name }}.xpi *
        env:
          FIREFOX_EXTENSION_DIR: "firefox"
          FIREFOX_OUTPUT_DIR: "dist/firefox"

      - name: Create Chrome Directory
        run: |
          mkdir -p ${{ env.CHROME_OUTPUT_DIR }}
          cd ${{ env.CHROME_EXTENSION_DIR }}
          zip -r ../${{ env.CHROME_OUTPUT_DIR }}/chrome_${{ github.event.repository.name }}.zip *
        env:
          CHROME_EXTENSION_DIR: "chrome"
          CHROME_OUTPUT_DIR: "dist/chrome"

      - name: Get Version
        id: package
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"
        shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package.outputs.version }}
          release_name: v${{ steps.package.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Firefox Extension to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Cela provient de l'étape de création de la Release
          asset_path: ./dist/firefox/firefox_${{ github.event.repository.name }}.xpi
          asset_name: Firefox_${{ github.event.repository.name }}.xpi
          asset_content_type: application/x-xpinstall

      - name: Upload Chrome Extension to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Cela provient de l'étape de création de la Release
          asset_path: ./dist/chrome/chrome_${{ github.event.repository.name }}.zip
          asset_name: Chrome_${{ github.event.repository.name }}.zip
          asset_content_type: application/zip